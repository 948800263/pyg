<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
				
	<dubbo:application name="pinyougou-shop-web" />
	<dubbo:registry address="zookeeper://192.168.25.128:2181"/>
	<dubbo:reference id="sellerService"  interface="com.pinyougou.sellergoods.service.SellerService" >
	</dubbo:reference>	
		<!-- 拦截处理的方式   Spring框架默认使用的是spel表达式-->
		<http pattern="/shoplogin.html" security="none"/>
		<http pattern="/register.html" security="none"/>
		<http pattern="/seller/add.do" security="none"/>
		<http pattern="/css/**" security="none"></http>
		<http pattern="/img/**" security="none"></http>
		<http pattern="/js/**" security="none"></http>
		<http pattern="/plugins/**" security="none"></http>
		
		<http use-expressions="false">
			<!-- 设置拦截的路径 -->
			<intercept-url pattern="/**"	access="ROLE_SELLER"/>
			<!-- 设置登陆 -->
			<form-login login-page="/shoplogin.html" 
			always-use-default-target="true"
			default-target-url="/admin/index.html" authentication-failure-url="/shoplogin.html"/>
			<!-- 设置CSRF token -->
			<csrf disabled="true"/>
			
			<headers>
				<frame-options policy="SAMEORIGIN"/>
			</headers>
			
			<logout/>
		</http>
		
		
		<!-- 加载userDetailsService对象 -->
		<beans:bean id="userDetailsService" class="com.pinyougou.sellergoods.service.impl.UserDetailsServiceImpl">
			<beans:property name="sellerService" ref="sellerService"/>
		</beans:bean>
		<beans:bean id="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
		
		<!-- 认证行为 -->
		<authentication-manager>
			<authentication-provider user-service-ref="userDetailsService">
				<password-encoder  ref="bcryptEncoder"/>
			</authentication-provider>
		</authentication-manager>
						
</beans:beans>